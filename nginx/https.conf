server {
    listen 443 ssl;                          # Listen for incoming HTTPS requests on port 443 (default for SSL)
    server_name yourdomain.com;              # Domain name of the server (e.g., example.com)
    ssl_certificate /etc/nginx/ssl/your_domain.com.crt; # Path to the SSL certificate for your domain
    ssl_certificate_key /etc/nginx/ssl/your_domain.com.key; # Path to the SSL private key for your domain
    location / {
        proxy_pass http://localhost:3000;    # Forward all requests to the Node.js app running on localhost:3000
        proxy_http_version 1.1;              # Use HTTP/1.1 to support WebSockets and keep connections alive
        proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket connections by upgrading HTTP connections
        proxy_set_header Connection 'upgrade';   # Maintain persistent WebSocket connections
        proxy_set_header Host $host;            # Pass the original 'Host' header to the backend server
        proxy_cache_bypass $http_upgrade;       # Bypass caching for upgraded WebSocket connections
    }
}